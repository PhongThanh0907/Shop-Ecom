@tailwind base;
@tailwind components;
@tailwind utilities;

@layer components {
  .width-80 {
    @apply w-[80%] mx-auto;
  }
  .flex-center {
    @apply flex justify-center items-center;
  }
  .flex-between {
    @apply flex justify-between items-center;
  }
  .hover-70 {
    @apply hover:opacity-60 duration-200 active:opacity-100 cursor-pointer
  }
}

* {
  scroll-behavior: smooth;
  margin: 0;
}

.box-shadow {
  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;;
}

.active-menu::before{
  content: " ";
  border-bottom-color: #00abc5;
  position: absolute;
  border-left: 7px solid transparent;
  border-right: 7px solid transparent;
  bottom: 11px;
  left: 46%;
  top: 38px;
  border-bottom-width: 7px;
  border-bottom-style: solid;
  transform: translate(-50%, -50%);
  animation: fadeIn 2s 
}

.loading {
  position: relative;
  overflow: hidden;
}

.loading::before{
  background-color: #dddddd;
  content: '';
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.loading::after{
  content: '';
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(to right, #dddddd, #ffffff 50%, #dddddd);
  animation: skeletonLoading 1s infinite alternate;
}

.stick-css li {
  height: 10px !important;
  width: 10px !important;
  border-radius: 100%;
  background-color: rgb(186, 186, 186);
  transition-duration: 200ms;
}

li.slick-active {
  background-color: #00abc5;
  width: 30px !important;
  border-radius: 10px !important;
  transition-duration: 200ms;
}

.lds-ellipsis {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}
.lds-ellipsis div {
  position: absolute;
  top: 33px;
  width: 13px;
  height: 13px;
  border-radius: 50%;
  background: #00abc5;
  animation-timing-function: cubic-bezier(0, 1, 1, 0);
}
.lds-ellipsis div:nth-child(1) {
  left: 8px;
  animation: lds-ellipsis1 0.6s infinite;
}
.lds-ellipsis div:nth-child(2) {
  left: 8px;
  animation: lds-ellipsis2 0.6s infinite;
}
.lds-ellipsis div:nth-child(3) {
  left: 32px;
  animation: lds-ellipsis2 0.6s infinite;
}
.lds-ellipsis div:nth-child(4) {
  left: 56px;
  animation: lds-ellipsis3 0.6s infinite;
}

.lds-ring div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  border: 3px solid #00abc5;
  border-radius: 50%;
  animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: #00abc5 transparent transparent transparent;
}
.lds-ring div:nth-child(1) {
  animation-delay: -0.45s;
}
.lds-ring div:nth-child(2) {
  animation-delay: -0.3s;
}
.lds-ring div:nth-child(3) {
  animation-delay: -0.15s;
}

.img-rotate {
  animation: rotate 3s linear infinite alternate;
}

.ring-circle {
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: transparent;
  border: 1px solid #9c191e;
  border-radius: 50%;
  position: absolute;
  animation: ring 1s linear infinite;
}

.ring-background {
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background-color: transparent;
  border: 15px solid #f3f4f6;
  border-radius: 50%;
  position: absolute;
  animation: ringbackground 1s linear infinite;
}

@keyframes fadeIn {
  0% {
      opacity: 0;
  }
  100% {
      opacity: 100%;
  }
}

@keyframes skeletonLoading {
  from {
    left: -50%;
  } to {
    left: 50%;
  }
}

@keyframes lds-ellipsis1 {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}
@keyframes lds-ellipsis3 {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(0);
  }
}
@keyframes lds-ellipsis2 {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(24px, 0);
  }
}

@keyframes lds-ring {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes ringbackground {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
    transform: scale(1.2, 1.2);
  }
}

@keyframes ring {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
    transform: scale(1.5, 1.5);
  }
}

@keyframes rotate {
  0% {
    transform: rotate(8deg);
  }
  20% {
    transform: rotate(-8deg);
  }
  40% {
    transform: rotate(8deg);
  }
  60% {
    transform: rotate(-8deg);
  }
  80% {
    transform: rotate(8deg);
  }
  100% {
    transform: rotate(-8deg);
  }
}